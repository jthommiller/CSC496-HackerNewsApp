{"version":3,"sources":["App.js","index.js"],"names":["cookies","Cookies","Search","value","onChange","onSubmit","children","type","Button","onClick","className","Table","list","onDismiss","map","item","key","objectID","style","width","href","url","title","author","num_comments","points","App","props","state","cookie","results","searchKey","searchTerm","get","needsToSearchTopstories","bind","setSearchTopstories","fetchSearchTopstories","onSearchChange","onSearchSubmit","this","result","hits","page","oldHits","updatedHits","setState","fetch","then","response","json","event","target","set","path","preventDefault","id","filter","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f8efe741.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport PropTypes from 'prop-types';\nimport Cookies from 'universal-cookie';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_PAGE = 0;\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\n\nconst cookies = new Cookies();\n\nconst Search = ({ value, onChange, onSubmit, children }) =>\n  <form onSubmit={onSubmit}>\n    <input\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n    <button type=\"submit\">\n      {children}\n    </button>\n  </form>\n\nconst Button = ({ onClick, className = '', children }) =>\n    <button onClick={onClick} className={className} type=\"button\" >\n      {children}\n    </button>\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  className: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nconst Table = ({ list, onDismiss }) =>\n  <div className=\"table\">\n    { list.map(item =>\n    <div key={item.objectID}  className=\"table-row\">\n      <span style={{ width: '40%' }}>\n        <a href={item.url}>{item.title}</a>\n      </span>\n      <span style={{ width: '30%' }}>\n        {item.author}\n      </span>\n      <span style={{ width: '10%' }}>\n        {item.num_comments}\n      </span>\n      <span style={{ width: '10%' }}>\n        {item.points}\n      </span>\n      <span style={{ width: '10%' }}>\n          <button\n            onClick={() => onDismiss(item.objectID)}\n            className=\"button-inline\"\n          >\n            Dismiss\n          </button>\n      </span>\n    </div>\n  )}\n  </div>\n\nTable.propTypes = {\n  list: PropTypes.array.isRequired,\n  onDismiss: PropTypes.func.isRequired,\n};\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      cookie: cookies,\n      results: null,\n      searchKey: '',\n      searchTerm: cookies.get('savedSearch') || DEFAULT_QUERY,\n    };\n    this.needsToSearchTopstories = this.needsToSearchTopstories.bind(this);\n    this.setSearchTopstories = this.setSearchTopstories.bind(this);\n    this.fetchSearchTopstories = this.fetchSearchTopstories.bind(this)\n    this.onSearchChange = this.onSearchChange.bind(this);\n    this.onSearchSubmit = this.onSearchSubmit.bind(this);\n    this.onDismiss = this.onDismiss.bind(this);\n  }\n\n  needsToSearchTopstories(searchTerm) {\n    return !this.state.results[searchTerm];\n  }\n  setSearchTopstories(result) {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n    const oldHits = results && results[searchKey] ? results[searchKey].hits : [];\n    const updatedHits = [ ...oldHits, ...hits ];\n    this.setState({ results: { ...results, [searchKey]: { hits: updatedHits, page } } })\n\n  }\n  fetchSearchTopstories(searchTerm, page) {\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n        .then(response => response.json())\n        .then(result => this.setSearchTopstories(result));\n  }\n  componentDidMount() {\n    const {searchTerm } = this.state;\n    this.setState({ searchKey: searchTerm });\n    this.fetchSearchTopstories(searchTerm);\n    this.fetchSearchTopstories(searchTerm, DEFAULT_PAGE);\n  }\n\n  onSearchChange(event) {\n    this.setState({ searchTerm: event.target.value });\n  }\n  onSearchSubmit(event) {\n    const { searchTerm, cookie } = this.state;\n    this.setState({ searchKey: searchTerm });\n    cookie.set('savedSearch', searchTerm, { path: '/'});\n    if (this.needsToSearchTopstories(searchTerm)) {\n      this.fetchSearchTopstories(searchTerm, DEFAULT_PAGE);\n    }\n    event.preventDefault();\n  }\n  onDismiss(id) {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n    this.setState({ results: { ...results, [searchKey]: { hits: updatedHits, page } } });\n  }\n  render() {\n    const { searchTerm, results, searchKey} = this.state;\n    const page = ( results && results[searchKey] && results[searchKey].page ) || 0;\n    const list = ( results && results[searchKey] && results[searchKey].hits ) || [];\n    return (\n        <div className=\"page\">\n          <div className=\"interactions\">\n            <Search\n              value={searchTerm}\n              onChange={this.onSearchChange}\n              onSubmit={this.onSearchSubmit}\n            >\n              Search\n            </Search>\n          </div>\n           <Table\n              list={list}\n              onDismiss={this.onDismiss}\n            />\n          <div className=\"interactions\">\n            <Button onClick={() => this.fetchSearchTopstories(searchTerm, page + 1)}>\n              More\n            </Button>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\nexport { Button, Search, Table, };\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\nif (module.hot) {\n    module.hot.accept()\n}\n"],"sourceRoot":""}